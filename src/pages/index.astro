---
// src/pages/landing.astro
import Layout from '@/layouts/Layout.astro';
const currentUrl = Astro.url;
---

<Layout canonicalUrl={currentUrl}>
  <head>
    <!-- Importing fonts from Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@700;900&family=Space+Mono:wght@400;700&display=swap"
      rel="stylesheet"
    />
  </head>

  <main
    class="page-container fixed top-0 left-0 w-screen h-screen overflow-hidden bg-black"
  >
    <!-- Layer for the overlapping images -->
    <div class="image-layers absolute inset-0 z-10">
      <!-- Black and White Image (Bottom Layer) -->
      <div class="image-bg bw-image"></div>
      <!-- Color Image (Top Layer, clipped) -->
      <div class="image-bg color-image"></div>
    </div>

    <!-- Central Name/Logo -->
    <div
      class="central-logo absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-20 text-center pointer-events-none"
    >
      <h2
        class="text-white text-2xl md:text-3xl font-bold font-custom tracking-wider"
      >
        PRAMUDITHA
      </h2>
      <p class="text-white/70 text-sm">Associate Software Engineer</p>
    </div>

    <!-- Interaction Layer (sits on top of everything) -->
    <div class="interaction-layer absolute inset-0 z-30 flex">
      <!-- Left Section Link (Transparent Hover Target) -->
      <a href="/about" class="group section-link designer-section">
        <div class="content">
          <h1 class="title">DESIGNER</h1>
          <span class="cta">
            View Work
            <span class="arrow">&rarr;</span>
          </span>
        </div>
      </a>
      <!-- Right Section Link (Transparent Hover Target) -->
      <a href="/developer" class="group section-link coder-section">
        <div class="content">
          <h1 class="title font-mono">&lt;CODER&gt;</h1>
          <span class="cta">
            View as Developer
            <span class="arrow">&rarr;</span>
          </span>
        </div>
      </a>
    </div>
    <!-- Social Media Icons (Bottom Center) -->
    <div class="social-icons absolute bottom-8 left-1/2 -translate-x-1/2 z-40 flex gap-6">
    <a href="https://github.com/PramudithaN" target="_blank" rel="noopener" aria-label="GitHub" class="icon-link">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon-svg" width="28" height="28" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 21.13V22" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </a>
    <a href="http://www.linkedin.com/in/pramuditha-nadun-612b1b204" target="_blank" rel="noopener" aria-label="LinkedIn" class="icon-link">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon-svg" width="28" height="28" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <rect width="16" height="16" x="4" y="4" rx="2" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M8 11v5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M8 8v.01" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M12 16v-5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M16 16v-3a2 2 0 0 0-4 0" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </a>
    <a href="https://www.behance.net/pramudithanadun1" target="_blank" rel="noopener" aria-label="Behance" class="icon-link">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon-svg" width="28" height="28" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <rect width="20" height="20" x="2" y="2" rx="4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M8 15v-6h3a2 2 0 0 1 0 4H8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M16 15a2 2 0 0 0 0-4c-1.1 0-2 .9-2 2" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M14 12h4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </a>
    <a href="https://pin.it/Lb92N4TnM" target="_blank" rel="noopener" aria-label="Pinterest" class="icon-link">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon-svg" width="28" height="28" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <circle cx="12" cy="12" r="10" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M8.72 15.5c.28-1.5.56-3 .84-4.5-.5-.84-.5-2.06.28-2.78.78-.72 2.06-.56 2.5.5.44 1.06-.28 2.06-1.06 2.34-.78.28-1.5-.28-1.5-1.06" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M12 17v-2" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </a>
    <a href="https://www.instagram.com/pramx.psd?igsh=MWNtaXF2cWw2ajEwcg==" target="_blank" rel="noopener" aria-label="Instagram" class="icon-link">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon-svg" width="28" height="28" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <rect width="20" height="20" x="2" y="2" rx="5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <circle cx="12" cy="12" r="5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M17 7h.01" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </a>
    <a href="https://web.facebook.com/pramuditha.nadun" target="_blank" rel="noopener" aria-label="Facebook" class="icon-link">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon-svg" width="28" height="28" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <rect width="20" height="20" x="2" y="2" rx="5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M16 8h-2a2 2 0 0 0-2 2v2h4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M14 16v-4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </a>
    </div>
      </a>
    </div>

    <style>
      .social-icons {
        background: rgba(0,0,0,0.6);
        padding: 0.5rem 1.5rem;
        border-radius: 9999px;
        box-shadow: 0 2px 16px 0 rgba(0,0,0,0.2);
        backdrop-filter: blur(6px);
      }
      .icon-link {
        color: #fff;
        opacity: 0.8;
        transition: color 0.2s, opacity 0.2s, transform 0.2s;
        display: flex;
        align-items: center;
      }
      .icon-link:hover {
        color: #38bdf8;
        opacity: 1;
        transform: translateY(-2px) scale(1.08);
      }
      .icon-svg {
        display: block;
        width: 28px;
        height: 28px;
      }
    </style>
  </main>

  <style>
    /* Custom fonts */
    .font-custom {
      font-family: 'Poppins', sans-serif;
    }
    .font-mono {
      font-family: 'Space Mono', monospace;
    }

    /* Base styles for the image layers */
    .image-bg {
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
      background-size: cover;
      background-position: center;
      /* Add a transition for the parallax movement */
      transition: background-position 0.1s ease-out;
    }

    /* !! IMPORTANT !! Image URLs for the backgrounds */
    .color-image {
      /* This is your full-color image */
      background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url('/Images/1335472.jpeg');
      z-index: 2;
      /* CORE LOGIC: Initially show only the left 50% of this top image */
      clip-path: inset(0 50% 0 0);
      /* Add transition for the reset animation on mouseleave */
      transition: clip-path 0.5s cubic-bezier(0.23, 1, 0.32, 1);
    }

    .bw-image {
      /* This is your black-and-white image, fully visible underneath */
      background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url('/Images/bnw.png');
      z-index: 1;
    }
    /* --- End of important section --- */


    /* Interaction links styling (Transparent hover targets) */
    .section-link {
      display: flex;
      justify-content: center;
      align-items: center;
      flex: 1; /* Each link takes up 50% of the space */
      text-decoration: none;
      height: 100%;
      position: relative;
    }

    /* CSS hover animations for clip-path have been removed */

    /* Content wrapper inside the link */
    .content {
      text-align: center;
      color: white;
      position: relative;
      z-index: 1;
      /* Initial state for the animation */
      opacity: 0;
      transform: scale(0.95);
      transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
    }
    
    /* Reveal content on hover */
    .section-link:hover .content {
        opacity: 1;
        transform: scale(1);
        transition-delay: 0.2s; 
    }


    /* Main title styles */
    .title {
      font-size: clamp(2.5rem, 6vw, 5rem);
      font-weight: 900;
      letter-spacing: 0.05em;
      text-transform: uppercase;
    }

    /* "Call to Action" text styles */
    .cta {
      display: inline-block;
      margin-top: 1rem;
      font-size: 1.125rem;
      color: rgba(255, 255, 255, 0.8);
      border: 1px solid rgba(255, 255, 255, 0.3);
      padding: 0.5rem 1.5rem;
      border-radius: 9999px;
      transition: all 0.4s ease;
      backdrop-filter: blur(5px);
    }

    .group:hover .cta {
      background-color: white;
      color: black;
      border-color: white;
    }

    /* Arrow styling */
    .arrow {
      display: inline-block;
      margin-left: 0.5rem;
      transition: transform 0.4s ease;
    }

    .group:hover .arrow {
      transform: translateX(5px);
    }

    /* Central logo fade on hover */
    .central-logo {
        transition: opacity 0.5s ease;
    }
    .interaction-layer:hover ~ .central-logo {
        opacity: 0;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Explicitly type the elements as HTMLElement or null
      const colorImage: HTMLElement | null = document.querySelector('.color-image');
      const bwImage: HTMLElement | null = document.querySelector('.bw-image');
      const pageContainer: HTMLElement | null = document.querySelector('.page-container');
      
      // The guard clause correctly handles the case where elements might not be found
      if (!colorImage || !bwImage || !pageContainer) return;

      const parallaxIntensity = 20; // How many pixels the image will move.
      // A smaller value creates a more noticeable delay/smoothing effect.
      const lerpFactor = 0.01; 

      let targetX = window.innerWidth / 2;
      let currentX = window.innerWidth / 2;
      let isMouseOver = false;

      // --- 1. Animation Loop ---
      function animate() {
        // If mouse is not over the container, smoothly move back to center
        if (!isMouseOver) {
          targetX = window.innerWidth / 2;
        }

        // Lerp for smooth motion
        currentX += (targetX - currentX) * lerpFactor;

        // --- 2. Reveal Logic ---
        const clipPercentage = (currentX / window.innerWidth) * 100;
        // Remove transition to let JS handle the animation smoothly
        if (colorImage) {
          colorImage.style.transition = 'none';
          colorImage.style.clipPath = `inset(0 ${100 - clipPercentage}% 0 0)`;
        }

        // --- 3. Horizontal-Only Parallax Logic ---
        const xOffset = (currentX / window.innerWidth) - 0.5;
        const xParallax = -xOffset * parallaxIntensity;
        const parallaxPosition = `calc(50% + ${xParallax}px) 50%`; // Y is always 50%
        
        if (colorImage) colorImage.style.backgroundPosition = parallaxPosition;
        if (bwImage) bwImage.style.backgroundPosition = parallaxPosition;
        
        requestAnimationFrame(animate);
      }
      
      // --- 4. Event Listeners ---
      // Explicitly type the event as a MouseEvent to access clientX
      pageContainer.addEventListener('mousemove', (e: MouseEvent) => {
        targetX = e.clientX;
      });
      
      pageContainer.addEventListener('mouseenter', () => {
          isMouseOver = true;
      });

      pageContainer.addEventListener('mouseleave', () => {
          isMouseOver = false;
          // Re-apply CSS transition for smooth reset animation
          colorImage.style.transition = 'clip-path 0.5s cubic-bezier(0.23, 1, 0.32, 1)';
      });

      // Start the animation loop
      animate();
    });
  </script>
</Layout>
